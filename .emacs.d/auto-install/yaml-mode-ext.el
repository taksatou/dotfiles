
(defun yaml-blank-line-p ()
  "Return non-nil if and only if current line is blank."
  (save-excursion
    (beginning-of-line)
    (looking-at "\\s-*$")))

(defun yaml-comment-line-p ()
  "Return non-nil if and only if current line has only a comment."
  (save-excursion
    (end-of-line)
    (when (eq 'comment (syntax-ppss-context (syntax-ppss)))
      (back-to-indentation)
      (looking-at (rx (or (syntax comment-start) line-end))))))

(defun yaml-beginning-of-block (&optional arg)
  (interactive "p")
  (let ((this-level (current-indentation)))
    (unless (eql 0 this-level)
      (while (and (zerop (forward-line -1))
                  (or (<= this-level (current-indentation))
                      (yaml-comment-line-p)
                      (yaml-blank-line-p)))))
    (back-to-indentation)))

(defun yaml-end-of-block (&optional arg)
  (interactive "p")
  (let ((this-level (current-indentation)))
    (while (and (zerop (forward-line))
                (or (<= this-level (current-indentation))
                    (yaml-comment-line-p)
                    (yaml-blank-line-p)))))

  (forward-line -1)
  (end-of-line))

(defun yaml-down-block (&optional arg)
  (interactive "p")
  (let ((this-level (current-indentation))
        (orig (point)))
    (while (and (zerop (forward-line))
                (or (yaml-comment-line-p)
                    (yaml-blank-line-p))))
    (if (< this-level (current-indentation))
        (back-to-indentation)
      (goto-char orig))))

(defun yaml-previous-block (&optional arg)
  (interactive "p")
  (let ((this-level (current-indentation))
        (orig (point)))
    (while (and (zerop (forward-line -1))
                (or (< this-level (current-indentation))
                    (yaml-comment-line-p)
                    (yaml-blank-line-p))))
    (if (eql this-level (current-indentation))
        (back-to-indentation)
      (goto-char orig))))

(defun yaml-next-block (&optional arg)
  (interactive "p")
  (let ((this-level (current-indentation))
        (orig (point)))
    (while (and (zerop (forward-line))
                (or (< this-level (current-indentation))
                    (yaml-comment-line-p)
                    (yaml-blank-line-p))))
    (if (eql this-level (current-indentation))
        (back-to-indentation)
      (goto-char orig))))

(define-key yaml-mode-map (kbd "M-C-f") 'yaml-next-block)
(define-key yaml-mode-map (kbd "M-C-b") 'yaml-previous-block)
(define-key yaml-mode-map (kbd "M-C-u") 'yaml-beginning-of-block)
(define-key yaml-mode-map (kbd "M-C-d") 'yaml-down-block)
(define-key yaml-mode-map (kbd "M-C-e") 'yaml-end-of-block)
